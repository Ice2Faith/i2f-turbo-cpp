系统时钟配置函数：
	时钟使能函数
		//时钟源使能
		void RCC_HSICmd(FunctionalState NewState);
		void RCC_LSICmd(FunctionalState NewState);
		void RCC_PLLCmd(FunctionalState NewState);
		//外设使能
		void RCC_RTCCLKCmd(FunctionalState NewState);
		void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState);
		void RCC_APBxPeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState);
			//Cmd表示使能
			//Config配置
			//Init初始化
	时钟源和倍频因子配置函数
		void RCC_HSEConfig(uint32_t RCC_HSE);
		void RCC_LSEConfig(uint8_t RCC_LSE);
		void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul);
		void RCC_MCOConfig(uint8_t RCC_MCO);
		void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource);
		void RCC_HCLKConfig(uint32_t RCC_SYSCLK);
		void RCC_PCLK1Config(uint32_t RCC_HCLK);
		void RCC_PCLK2Config(uint32_t RCC_HCLK);
		void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource);
		void RCC_ADCCLKConfig(uint32_t RCC_PCLK2);
		void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource);
	外设复位函数
		void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState);
		void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState);

系统时钟设置步骤
	void RCC_HSE_Config(u32 div,u32 pllm)//自定义系统时间（可以修改时钟）
	{
		RCC_DeInit();//重置外设RCC寄存器
		RCC_HSEConfig(RCC_HSE_ON);//设置外部高速晶振HSE
		if(RCC_WaitForHSEStartUp()==SUCCESS)//等待HSE起振
		{
			RCC_HCLKConfig(RCC_SYSCLK_Div1);//设置AHB时钟HCLK
			RCC_PCLK1Config(RCC_HCLK_Div2);//设置低速APB1时钟PCLK1
			RCC_PCLK2Config(RCC_HCLK_Div1);//设置高速APB2时钟PCLK2
			RCC_PLLConfig(div,pllm);//设置PLL时钟源及倍频系数，核心内容，其他的都是标准写法
			RCC_PLLCmd(ENABLE);//使能或者失能PLL
			while(RCC_GetFlagStatus(RCC_FLAG_PLLRDY)==RESET);//检查指定的RCC标志位设置与否，PLL就绪
			RCC_SYSCLKConfig(RCC_SYSCLKSource_PLLCLK);//设置系统时钟PLLCLK
			while(RCC_GetSYSCLKSource()!=0x08);//返回用作系统时钟的时钟源，0x08:PLL作为系统时钟
		}
	}
		
		
	