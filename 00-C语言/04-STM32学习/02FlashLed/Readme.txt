	
认识GPIO
	通用输入输出端口的简称
	实现通过引脚来进行数据的通信，输入与输出
	通过控制GPIO控制高低电平就能实现控制
	STM32引脚的分类：
		STM32F10x拥有144个引脚
		电源管脚
		晶振管脚
		复位管脚
		下载管脚
		BOOT管脚
		GPIO管脚
	每个引脚，都有他们具体的功能，一般是IO口，都支持5V的的激发电压
	但是模拟口，就只能支持3.3V的激发电压
	这些都可以在芯片手册进行查看
	
	GPIO工作模式
		输入模式：
			浮空，也就是不进行上下拉
			上拉，拉到高电平
			下拉，拉到低电平
			模拟，不进行斯密特TTL处理，处理为只有高低电平
		输出模式：
			开漏，通过P、N MOS管实现输出高低电平
			开漏复用
			推挽式，不断变换P、N MOS管输出，需要外接的VDD高电平和VSS低电平参考决定
			推挽式复用
	GPIO的初始化
		配置输入还是输出
		配置上拉还是下拉
		配置工作速度（通过配置寄存器GPIOx_CRL和GPIOx_CRH）
		具体要输出的内容（置位复位寄存器：BSRR 和 数据输出寄存器：ODR）
	

代码中：
	存在两套代码，所以只能使用其中一套进行编译运行
默认开启main.c这一套，可以看到是通过预编译#if 1 ... #endif
进行条件编译的

main.c这一套使用了结构体，封装了寄存器结构体和一些函数，实现了流水灯效果
	stm32f10x_register.h
	main.c

base_light.c这一套，没有使用任何技巧，就是纯粹的寄存器操作，代码也很简单，让一颗LED闪烁，LED1或者PB5引脚输出低电平，因此如果你要在PB5引脚外接其他设备的话，PB5引脚为GND，设备另一端接3.3V或者5V
	base_light.c
	stm32f10x.h
		

		